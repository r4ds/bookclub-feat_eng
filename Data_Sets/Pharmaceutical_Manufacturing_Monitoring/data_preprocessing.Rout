
R Under development (unstable) (2019-03-18 r76245) -- "Unsuffered Consequences"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(tidyverse)
Registered S3 methods overwritten by 'ggplot2':
  method         from 
  [.quosures     rlang
  c.quosures     rlang
  print.quosures rlang
Registered S3 method overwritten by 'rvest':
  method            from
  read_xml.response xml2
── Attaching packages ─────────────────────────────────────── tidyverse 1.2.1 ──
✔ ggplot2 3.1.0       ✔ purrr   0.3.2  
✔ tibble  2.1.1       ✔ dplyr   0.8.0.1
✔ tidyr   0.8.3       ✔ stringr 1.4.0  
✔ readr   1.3.1       ✔ forcats 0.4.0  
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(psych)

Attaching package: ‘psych’

The following objects are masked from ‘package:ggplot2’:

    %+%, alpha

> library(zoo)

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

> 
> # ------------------------------------------------------------------------------
> 
> load("small_scale.RData")
> load("large_scale.RData")
> 
> small_scale <- 
+   small_scale %>% 
+   dplyr::rename(Reactor = BatchID, Day = Sample)
> 
> large_scale <- 
+   large_scale %>% 
+   dplyr::rename(Reactor = BatchID, Day = Sample)
> 
> # Make versions of the data where the spectra are stacked ----------------------
> small_info <-
+   small_scale %>%
+   dplyr::select(Reactor, Day, BatchSample, Glucose)
> 
> small_x <- 
+   small_scale %>%
+   dplyr::select(-Glucose)
> 
> small_x_long <- 
+   gather(small_x, key = spec_num, value = y, `400`:`3050`) %>%
+   mutate(spec_num = as.numeric(spec_num),
+          Type = "Small")
> 
> large_info <-
+   large_scale %>%
+   dplyr::select(Reactor, Day, BatchSample, Glucose)
> 
> large_x <- large_scale %>%
+   dplyr::select(-Glucose)
> 
> large_x_long <- 
+   gather(large_x, key = spec_num, value = y, `400`:`3050`) %>%
+   mutate(spec_num = as.numeric(spec_num),
+          Type = "Large")
> 
> small_large_long <-
+   bind_rows(small_x_long, large_x_long) %>%
+   mutate(Reactor = factor(Reactor),
+          BatchSample = factor(BatchSample),
+          Type = factor(Type, levels = c("Small", "Large")))
> 
> # Polynomial baseline estimation -----------------------------------------------
> 
> poly_baseline <- function(dat, min_points = 50, num_iter = 10, degree = 5){
+   orig_data <- dat
+   sub_data <- dat
+   min_points <- min_points
+   current_formula <- as.formula(paste0("y ~ poly(spec_num,", degree, ")"))
+   for (i in 1:num_iter){
+     current_poly <- lm(current_formula, data = sub_data)
+     
+     sub_data <-
+       orig_data %>%
+       mutate(pred = predict(current_poly, orig_data)) %>%
+       dplyr::filter(pred > y)
+     
+     if(nrow(sub_data) < min_points) break
+   }
+   
+   baseline_data <- 
+     dat %>%
+     mutate(baseline = predict(current_poly, dat))
+   
+   baseline_data
+ }
> 
> small_by_batch <- split(small_x_long, small_x_long$BatchSample)
> small_baseline <- 
+   map_dfr(small_by_batch, poly_baseline) %>%
+   mutate(y = y - baseline) %>% 
+   dplyr::select(-baseline)
> 
> large_by_batch <- split(large_x_long, large_x_long$BatchSample)
> large_baseline <- 
+   map_dfr(large_by_batch, poly_baseline) %>%
+   mutate(y = y - baseline) %>% 
+   dplyr::select(-baseline)
> 
> # Reduce the noise in the spectra ----------------------------------------------
> 
> standardize <- function(x) {
+   (x - mean(x, trim = 0.05)) / psych::winsor.sd(x, trim = 0.05)
+ }
> 
> small_standardized <-
+   small_baseline %>%
+   group_by(BatchSample) %>%
+   mutate(y = standardize(y))
> 
> large_standardized <-
+   large_baseline %>%
+   group_by(BatchSample) %>%
+   mutate(y = standardize(y)) 
> 
> small_smoothed <-
+   small_standardized %>%
+   group_by(BatchSample) %>%
+   mutate(y = zoo::rollmean(y, k = 15, na.pad = TRUE))
> 
> large_smoothed <-
+   large_standardized %>%
+   group_by(BatchSample) %>%
+   mutate(y = zoo::rollmean(y, k = 15, na.pad = TRUE)) 
> 
> # Reduce Correlation -----------------------------------------------------------
> 
> small_derivative <-
+   small_smoothed %>%
+   group_by(BatchSample) %>%
+   mutate(smoothed_lag1 = lag(y, n = 1),
+          y = y - smoothed_lag1) %>% 
+   dplyr::select(-smoothed_lag1)
> 
> large_derivative <-
+   large_smoothed %>%
+   group_by(BatchSample) %>%
+   mutate(smoothed_lag1 = lag(y, n = 1),
+          y = y - smoothed_lag1)%>% 
+   dplyr::select(-smoothed_lag1)
> 
> # Convert back to long format where spectra are variables and also remove ------
> # wavelengths with missing values in the small or large reactor data -----------
> 
> small_none <-
+   small_x_long %>%
+   mutate(
+     label = format(spec_num),
+     label = gsub(" ", "0", label),
+     label = paste0("w_", label)
+   ) %>% 
+   dplyr::select(-spec_num) %>% 
+   spread(key = label, value = y) %>% 
+   full_join(small_info, by = c("Reactor", "Day", "BatchSample")) %>% 
+   dplyr::select(-Type, -BatchSample)
> 
> large_none <-
+   large_x_long %>%
+   mutate(
+     label = format(spec_num),
+     label = gsub(" ", "0", label),
+     label = paste0("w_", label)
+   ) %>% 
+   dplyr::select(-spec_num) %>% 
+   spread(key = label, value = y) %>% 
+   full_join(large_info, by = c("Reactor", "Day", "BatchSample")) %>% 
+   dplyr::select(-Type, -BatchSample)
> 
> small_none_na <- map_dbl(small_none, function(x) mean(is.na(x)))
> large_none_na <- map_dbl(large_none, function(x) mean(is.na(x)))
> 
> if (any(small_none_na > 0) | any(large_none_na > 0)) {
+   removals <- 
+     c(names(small_none_na)[small_none_na > 0], 
+       names(large_none_na)[large_none_na > 0])
+   removals <- unique(removals)
+   small_none <-
+     small_none %>% 
+     dplyr::select(-!!!removals)
+ }
> 
> save(small_none, large_none, file = "no_processing.RData")
> 
> 
> small_baseline <-
+   small_baseline %>%
+   mutate(
+     label = format(spec_num),
+     label = gsub(" ", "0", label),
+     label = paste0("w_", label)
+   ) %>% 
+   dplyr::select(-spec_num) %>% 
+   spread(key = label, value = y) %>% 
+   full_join(small_info, by = c("Reactor", "Day", "BatchSample")) %>% 
+   dplyr::select(-Type, -BatchSample)
> 
> large_baseline <-
+   large_baseline %>%
+   mutate(
+     label = format(spec_num),
+     label = gsub(" ", "0", label),
+     label = paste0("w_", label)
+   ) %>% 
+   dplyr::select(-spec_num) %>% 
+   spread(key = label, value = y) %>% 
+   full_join(large_info, by = c("Reactor", "Day", "BatchSample")) %>% 
+   dplyr::select(-Type, -BatchSample)
> 
> 
> small_baseline_na <- map_dbl(small_baseline, function(x) mean(is.na(x)))
> large_baseline_na <- map_dbl(large_baseline, function(x) mean(is.na(x)))
> 
> if (any(small_baseline_na > 0) | any(large_baseline_na > 0)) {
+   removals <- 
+     c(names(small_baseline_na)[small_baseline_na > 0], 
+       names(large_baseline_na)[large_baseline_na > 0])
+   removals <- unique(removals)
+   small_baseline <-
+     small_baseline %>% 
+     dplyr::select(-!!!removals)
+ }
> 
> save(small_baseline, large_baseline, file = "baseline_corr.RData") 
> 
> 
> small_standardized <-
+   small_standardized %>%
+   mutate(
+     label = format(spec_num),
+     label = gsub(" ", "0", label),
+     label = paste0("w_", label)
+   ) %>% 
+   ungroup() %>% 
+   dplyr::select(-spec_num) %>% 
+   spread(key = label, value = y) %>% 
+   full_join(small_info, by = c("Reactor", "Day", "BatchSample")) %>% 
+   dplyr::select(-Type, -BatchSample)
> 
> large_standardized <-
+   large_standardized %>%
+   mutate(
+     label = format(spec_num),
+     label = gsub(" ", "0", label),
+     label = paste0("w_", label)
+   ) %>% 
+   ungroup() %>% 
+   dplyr::select(-spec_num) %>% 
+   spread(key = label, value = y) %>% 
+   full_join(large_info, by = c("Reactor", "Day", "BatchSample")) %>% 
+   dplyr::select(-Type, -BatchSample)
> 
> small_standardized_na <- map_dbl(small_standardized, function(x) mean(is.na(x)))
> large_standardized_na <- map_dbl(large_standardized, function(x) mean(is.na(x)))
> 
> if (any(small_standardized_na > 0) | any(large_standardized_na > 0)) {
+   removals <- 
+     c(names(small_standardized_na)[small_standardized_na > 0], 
+       names(large_standardized_na)[large_standardized_na > 0])
+   removals <- unique(removals)
+   small_standardized <-
+     small_standardized %>% 
+     dplyr::select(-!!!removals)
+ }
> 
> save(small_standardized, large_standardized, file = "standardized.RData")
> 
> small_smoothed <-
+   small_smoothed %>%
+   mutate(
+     label = format(spec_num),
+     label = gsub(" ", "0", label),
+     label = paste0("w_", label)
+   ) %>% 
+   ungroup() %>% 
+   dplyr::select(-spec_num) %>% 
+   spread(key = label, value = y) %>% 
+   full_join(small_info, by = c("Reactor", "Day", "BatchSample")) %>% 
+   dplyr::select(-Type, -BatchSample)
> 
> large_smoothed <-
+   large_smoothed %>%
+   mutate(
+     label = format(spec_num),
+     label = gsub(" ", "0", label),
+     label = paste0("w_", label)
+   )  %>% 
+   ungroup()%>% 
+   dplyr::select(-spec_num) %>% 
+   spread(key = label, value = y) %>% 
+   full_join(large_info, by = c("Reactor", "Day", "BatchSample")) %>% 
+   dplyr::select(-Type, -BatchSample)
> 
> small_smoothed_na <- map_dbl(small_smoothed, function(x) mean(is.na(x)))
> large_smoothed_na <- map_dbl(large_smoothed, function(x) mean(is.na(x)))
> 
> if (any(small_smoothed_na > 0) | any(large_smoothed_na > 0)) {
+   removals <- 
+     c(names(small_smoothed_na)[small_smoothed_na > 0], 
+       names(large_smoothed_na)[large_smoothed_na > 0])
+   removals <- unique(removals)
+   small_smoothed <-
+     small_smoothed %>% 
+     dplyr::select(- !!removals)
+ }
> 
> save(small_smoothed, large_smoothed, file = "smoothed.RData")
> 
> small_derivative <-
+   small_derivative %>%
+   mutate(
+     label = format(spec_num),
+     label = gsub(" ", "0", label),
+     label = paste0("w_", label)
+   ) %>% 
+   ungroup() %>% 
+   dplyr::select(-spec_num) %>% 
+   spread(key = label, value = y) %>% 
+   full_join(small_info, by = c("Reactor", "Day", "BatchSample")) %>% 
+   dplyr::select(-Type, -BatchSample)
> 
> large_derivative <-
+   large_derivative %>%
+   mutate(
+     label = format(spec_num),
+     label = gsub(" ", "0", label),
+     label = paste0("w_", label)
+   ) %>% 
+   ungroup() %>% 
+   dplyr::select(-spec_num) %>% 
+   spread(key = label, value = y) %>% 
+   full_join(large_info, by = c("Reactor", "Day", "BatchSample")) %>% 
+   dplyr::select(-Type, -BatchSample)
> 
> small_derivative_na <- map_dbl(small_derivative, function(x) mean(is.na(x)))
> large_derivative_na <- map_dbl(large_derivative, function(x) mean(is.na(x)))
> 
> if (any(small_derivative_na > 0) | any(large_derivative_na > 0)) {
+   removals <- 
+     c(names(small_derivative_na)[small_derivative_na > 0], 
+       names(large_derivative_na)[large_derivative_na > 0])
+   removals <- unique(removals)
+   small_derivative <-
+     small_derivative %>% 
+     dplyr::select(- !!removals)
+ }
> 
> save(small_derivative, large_derivative, file = "derivatives.RData")
> 
> 
> # Create resampling folds where 12 reactors are modeled and 3 are predicted ----
> 
> # BatchID is reactor
> # Sample is day 
> combos <- utils::combn(x = unique(small_baseline$Reactor), 12)
> sel_combos <- floor(seq.int(1, ncol(combos), length.out = 25))
> combos <- combos[, sel_combos]
> modeling_ind <- 
+   apply(combos, 2, function(x, dat) which(dat %in% x), dat = small_baseline$Reactor)
> resample_ind <- 
+   modeling_ind %>% 
+   as.data.frame() %>% 
+   setNames(caret:::prettySeq(1:25)) %>% 
+   as.list()
> 
> save(resample_ind, file = "resample_ind.RData")
> 
> # ------------------------------------------------------------------------------
> 
> sessionInfo()
R Under development (unstable) (2019-03-18 r76245)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS High Sierra 10.13.6

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] zoo_1.8-5       psych_1.8.12    forcats_0.4.0   stringr_1.4.0  
 [5] dplyr_0.8.0.1   purrr_0.3.2     readr_1.3.1     tidyr_0.8.3    
 [9] tibble_2.1.1    ggplot2_3.1.0   tidyverse_1.2.1

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.1         lubridate_1.7.4    lattice_0.20-38    class_7.3-15      
 [5] assertthat_0.2.1   ipred_0.9-8        foreach_1.4.4      R6_2.4.0          
 [9] cellranger_1.1.0   plyr_1.8.4         backports_1.1.3    stats4_3.6.0      
[13] httr_1.4.0         pillar_1.3.1       rlang_0.3.3        lazyeval_0.2.2    
[17] caret_6.0-82       readxl_1.3.1       rstudioapi_0.10    data.table_1.12.0 
[21] rpart_4.1-13       Matrix_1.2-16      splines_3.6.0      gower_0.2.0       
[25] foreign_0.8-71     munsell_0.5.0      broom_0.5.1        compiler_3.6.0    
[29] modelr_0.1.4       pkgconfig_2.0.2    mnormt_1.5-5       nnet_7.3-12       
[33] tidyselect_0.2.5   prodlim_2018.04.18 codetools_0.2-16   crayon_1.3.4      
[37] withr_2.1.2        MASS_7.3-51.4      recipes_0.1.5      ModelMetrics_1.2.2
[41] grid_3.6.0         nlme_3.1-137       jsonlite_1.6       gtable_0.2.0      
[45] magrittr_1.5       scales_1.0.0       cli_1.1.0          stringi_1.4.3     
[49] reshape2_1.4.3     timeDate_3043.102  xml2_1.2.0         generics_0.0.2    
[53] lava_1.6.5         iterators_1.0.10   tools_3.6.0        glue_1.3.1        
[57] hms_0.4.2          parallel_3.6.0     survival_2.43-3    colorspace_1.4-1  
[61] rvest_0.3.2        haven_2.1.0       
> 
> # ------------------------------------------------------------------------------
> 
> if (!interactive())
+   q("no")
> proc.time()
   user  system elapsed 
 14.194   1.046  15.242 
