
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # ------------------------------------------------------------------------------
> # Feature Engineering and Selection: A Practical Approach for Predictive Models
> # by Max Kuhn and Kjell Johnson
> #
> # ------------------------------------------------------------------------------
> # 
> # Code for Section 7.5.2 at
> # https://bookdown.org/max/FES/detecting-interaction-effects.html#approaches-when-complete-enumeration-is-practically-impossible
> #
> # ------------------------------------------------------------------------------
> # 
> # Code requires these packages: 
> 
> library(pre)
> library(ranger)

Attaching package: ‘ranger’

The following object is masked from ‘package:pre’:

    importance

> library(tidymodels)
Registered S3 methods overwritten by 'ggplot2':
  method         from 
  [.quosures     rlang
  c.quosures     rlang
  print.quosures rlang
Registered S3 method overwritten by 'xts':
  method     from
  as.zoo.xts zoo 
── Attaching packages ────────────────────────────────────── tidymodels 0.0.2 ──
✔ broom     0.5.1          ✔ purrr     0.3.2     
✔ dials     0.0.2          ✔ recipes   0.1.5     
✔ dplyr     0.8.0.1        ✔ rsample   0.0.4     
✔ ggplot2   3.1.1          ✔ tibble    2.1.3     
✔ infer     0.4.0          ✔ yardstick 0.0.2     
✔ parsnip   0.0.2.9000     
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ purrr::discard() masks scales::discard()
✖ dplyr::filter()  masks stats::filter()
✖ dplyr::lag()     masks stats::lag()
✖ recipes::step()  masks stats::step()
Warning messages:
1: replacing previous import ‘ggplot2::vars’ by ‘rlang::vars’ when loading ‘bayesplot’ 
2: replacing previous import ‘dplyr::vars’ by ‘rlang::vars’ when loading ‘tidytext’ 
> library(AmesHousing)
> library(doParallel)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> library(stringr)

Attaching package: ‘stringr’

The following object is masked from ‘package:recipes’:

    fixed

> 
> source("../clean_value.R")
> 
> # ------------------------------------------------------------------------------
> 
> workers <- parallel::detectCores() - 1
> 
> # Memory requirements: 
> # In addition to the main R session (using ~1GB), each parallel worker's peak  
> # memory usage is estimated to need about 10GB of memory when pre::pre() and 
> # pre::interact() are called. These numbers increase as the parameter `ntrees`
> # increases. 
> 
> cl <- makeForkCluster(nnodes = workers)
> registerDoParallel(cl)
> 
> # ------------------------------------------------------------------------------
> 
> h_stat <- function(data, ...) {
+   require(foreach)
+   pre_obj <- pre(data = data, ...)
+   
+   pred_names <- pre_obj$x_names
+   pred_df <- 
+     tibble(
+       Predictor = pred_names,
+       H = 0
+     )
+   
+   int_obj <-
+     try(
+       interact(
+         pre_obj,
+         parallel = TRUE,
+         plot = FALSE
+       ),
+       silent = TRUE)
+   
+   if (!inherits(int_obj, "try-error")) {
+     res <-
+       tibble(
+         Predictor = names(int_obj),
+         H = as.numeric(int_obj)
+       )
+     missing_pred <- setdiff(pred_names, res$Predictor)
+     if (length(missing_pred) > 0) {
+       res <-
+         pred_df %>% 
+         dplyr::filter(Predictor %in% missing_pred) %>%
+         bind_rows(res)
+     }
+   } else {
+     print(int_obj)
+     res <- pred_df
+   }
+   res
+ }
> 
> boot_h <- function(split, ...) {
+   dat <-
+     recipe(Sale_Price ~ Bldg_Type + Neighborhood + Year_Built +
+              Gr_Liv_Area + Full_Bath + Year_Sold + Lot_Area +
+              Central_Air + Longitude + Latitude + MS_SubClass +
+              Alley + Lot_Frontage + Pool_Area + Garage_Finish + 
+              Foundation + Land_Contour + Roof_Style,
+            data = analysis(split)) %>%
+     step_log(Sale_Price, base = 10) %>%
+     step_BoxCox(Lot_Area, Gr_Liv_Area, Lot_Frontage) %>%
+     step_other(Neighborhood, MS_SubClass, Roof_Style, Foundation,
+                threshold = 0.05)  %>%
+     step_zv(all_predictors()) %>% 
+     prep(training = analysis(split), retain = TRUE) %>%
+     juice()
+   h_stat(data = dat, ...)
+ }
> 
> # ------------------------------------------------------------------------------
> 
> ames <- make_ames()
> 
> set.seed(955)
> ames_split <- initial_split(ames)
> ames_train <- training(ames_split)
> 
> # ------------------------------------------------------------------------------
> 
> ames_rec <-
+   recipe(Sale_Price ~ Bldg_Type + Neighborhood + Year_Built +
+            Gr_Liv_Area + Full_Bath + Year_Sold + Lot_Area +
+            Central_Air + Longitude + Latitude + MS_SubClass +
+            Alley + Lot_Frontage + Pool_Area + Garage_Finish + 
+            Foundation + Land_Contour + Roof_Style,
+          data = ames_train) %>%
+   step_log(Sale_Price, base = 10) %>%
+   step_BoxCox(Lot_Area, Gr_Liv_Area, Lot_Frontage) %>%
+   step_other(Neighborhood, MS_SubClass, Roof_Style, Foundation, 
+              threshold = 0.05)  %>%
+   step_zv(all_predictors())
> 
> ames_pre <- ames_rec %>% prep(ames_train) %>% juice()
> 
> # ------------------------------------------------------------------------------
> 
> set.seed(3108)
> obs_h <- 
+   h_stat(
+     data = ames_pre,
+     Sale_Price ~ .,
+     normalize = TRUE,
+     ntrees = 50,
+     winsfrac = 0,
+     verbose = TRUE,
+     par.final = TRUE
+   )
A rule ensemble for prediction of a continuous response will be created.

A total of 50 trees and  592 rules were generated initially.

A total of 43 generated rules were perfectly collinear with earlier rules and removed from the initial ensemble. 
($duplicates.removed and $complements.removed show which, if any).

An initial ensemble consisting of 549 rules was successfully created.

Final ensemble with minimum cv error: 
  lambda = 0.0002907381
  number of terms = 86
  mean cv error (se) = 0.005255816 (0.0003746957)

Final ensemble with cv error within 1se of minimum: 
  lambda = 0.001173715
  number of terms = 52
  mean cv error (se) = 0.005619424 (0.0004027434)
> 
> # ------------------------------------------------------------------------------
> 
> set.seed(9081)
> h_vals <- 
+   bootstraps(ames_train, times = 20) %>%
+   mutate(
+     stats = 
+       map(
+         splits,
+         boot_h,
+         Sale_Price ~ .,
+         normalize = FALSE,
+         ntrees = 50,
+         winsfrac = 0,
+         par.final = TRUE
+       )
+   )
> 
> h_stats <- 
+   h_vals %>%
+   pull(stats) %>%
+   bind_rows() %>%
+   group_by(Predictor) %>%
+   summarise(Bootstrap = median(H)) %>%
+   full_join(
+     obs_h %>% dplyr::rename(`Original Data` = H)
+   ) %>%
+   arrange(Bootstrap)
Joining, by = "Predictor"
> 
> ordered_pred <- 
+   h_stats %>%
+   pull(Predictor)
> 
> h_stats <-
+   h_stats %>%
+   gather(Estimator, H, -Predictor) %>%
+   mutate(Predictor = factor(Predictor, levels = ordered_pred)) %>% 
+   dplyr::filter(H > 0)
> 
> # https://bookdown.org/max/FES/approaches-when-complete-enumeration-is-practically-impossible.html#fig:interactions-h-statistic
> p <- 
+   h_stats %>% 
+   mutate(
+     Predictor = clean_value(Predictor),
+     Predictor = str_replace(Predictor, ":", "")
+   ) %>% 
+   ggplot(aes(x = reorder(Predictor, H), y = H, shape = Estimator)) + 
+   geom_hline(yintercept = 0.001, col = "red", alpha = 0.5, lty = 2) + 
+   geom_point() + 
+   coord_flip() + 
+   xlab("") + 
+   scale_shape_manual(values = c(16, 1)) + 
+   theme(legend.position = "top")
> 
> 
> # ------------------------------------------------------------------------------
> 
> stopCluster(cl)
> 
> # ------------------------------------------------------------------------------
> 
> rf_mod <- ranger(Sale_Price ~ ., data = ames_pre, num.trees = 2000,
+                  importance = "impurity", num.threads = workers,
+                  seed = 8516)
> 
> rf_imp <- 
+   tibble(
+     Predictor = names(rf_mod$variable.importance),
+     Importance = unname(rf_mod$variable.importance)
+   )
> 
> # https://bookdown.org/max/FES/approaches-when-complete-enumeration-is-practically-impossible.html#fig:interactions-rf-importance
> p <- 
+   ggplot(rf_imp, aes(x = reorder(Predictor, Importance), y = Importance)) + 
+   geom_bar(stat = "identity") + 
+   coord_flip() + 
+   xlab("")
> 
> # ------------------------------------------------------------------------------
> 
> save(h_stats, obs_h, file = "ames_h_stats.RData")
> save(rf_mod, rf_imp, file = "ames_rf.RData")
> 
> # ------------------------------------------------------------------------------
> 
> sessionInfo()
R version 3.6.0 (2019-04-26)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS High Sierra 10.13.6

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] stringr_1.4.0      doParallel_1.0.14  iterators_1.0.10   foreach_1.4.4      AmesHousing_0.0.3  yardstick_0.0.2   
 [7] tibble_2.1.3       rsample_0.0.4      tidyr_0.8.3        recipes_0.1.5      purrr_0.3.2        parsnip_0.0.2.9000
[13] infer_0.4.0        ggplot2_3.1.1      dplyr_0.8.0.1      dials_0.0.2        scales_1.0.0       broom_0.5.1       
[19] tidymodels_0.0.2   ranger_0.11.1      pre_0.6.0         

loaded via a namespace (and not attached):
  [1] minqa_1.2.4         colorspace_1.4-1    class_7.3-15        ggridges_0.5.1      rsconnect_0.8.13   
  [6] markdown_0.9        base64enc_0.1-3     tidytext_0.2.0      rstudioapi_0.10     rstan_2.18.2       
 [11] SnowballC_0.6.0     earth_4.7.0         DT_0.5              prodlim_2018.04.18  mvtnorm_1.0-9      
 [16] lubridate_1.7.4     codetools_0.2-16    splines_3.6.0       knitr_1.23          libcoin_1.0-4      
 [21] shinythemes_1.1.2   bayesplot_1.6.0     Formula_1.2-3       nloptr_1.2.1        pROC_1.14.0        
 [26] shiny_1.2.0         compiler_3.6.0      backports_1.1.4     assertthat_0.2.1    Matrix_1.2-17      
 [31] lazyeval_0.2.2      cli_1.1.0           later_0.8.0         htmltools_0.3.6     prettyunits_1.0.2  
 [36] tools_3.6.0         igraph_1.2.4        partykit_1.2-3      gtable_0.3.0        glue_1.3.1         
 [41] reshape2_1.4.3      Rcpp_1.0.1          nlme_3.1-139        crosstalk_1.0.0     timeDate_3043.102  
 [46] inum_1.0-0          xfun_0.7            gower_0.2.0         ps_1.3.0            lme4_1.1-20        
 [51] mime_0.6            miniUI_0.1.1.1      gtools_3.8.1        tidypredict_0.3.0   MASS_7.3-51.4      
 [56] zoo_1.8-5           ipred_0.9-8         rstanarm_2.18.2     colourpicker_1.0    promises_1.0.1     
 [61] inline_0.3.15       shinystan_2.5.0     tidyposterior_0.0.2 gridExtra_2.3       TeachingDemos_2.10 
 [66] loo_2.0.0           StanHeaders_2.18.1  rpart_4.1-15        stringi_1.4.3       tokenizers_0.2.1   
 [71] dygraphs_1.1.1.6    plotrix_3.7-4       pkgbuild_1.0.3      lava_1.6.5          rlang_0.3.99.9003  
 [76] pkgconfig_2.0.2     matrixStats_0.54.0  lattice_0.20-38     rstantools_1.5.1    htmlwidgets_1.3    
 [81] processx_3.3.1      tidyselect_0.2.5    plyr_1.8.4          magrittr_1.5        R6_2.4.0           
 [86] generics_0.0.2      pillar_1.4.1        withr_2.1.2         xts_0.11-2          survival_2.44-1.1  
 [91] nnet_7.3-12         janeaustenr_0.1.5   crayon_1.3.4        grid_3.6.0          callr_3.2.0        
 [96] plotmo_3.5.2        threejs_0.3.1       digest_0.6.19       xtable_1.8-3        httpuv_1.4.5.1     
[101] stats4_3.6.0        munsell_0.5.0       glmnet_2.0-16       shinyjs_1.0        
> 
> if (!interactive())
+   q("no")
> proc.time()
     user    system   elapsed 
54188.806 23020.107  8004.717 
