
R Under development (unstable) (2019-03-18 r76245) -- "Unsuffered Consequences"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # ------------------------------------------------------------------------------
> # Feature Engineering and Selection: A Practical Approach for Predictive Models
> # by Max Kuhn and Kjell Johnson
> #
> # ------------------------------------------------------------------------------
> # 
> # Code for Section 13.2 at
> # https://bookdown.org/max/FES/global.html#simulated-annealing
> #
> # This file is for the SA search where the initial model has 50% of the features
> #
> # ------------------------------------------------------------------------------
> # 
> # Code requires these packages: 
> 
> library(caret)
Loading required package: lattice
Loading required package: ggplot2
Registered S3 methods overwritten by 'ggplot2':
  method         from 
  [.quosures     rlang
  c.quosures     rlang
  print.quosures rlang
> library(tidymodels)
Registered S3 method overwritten by 'xts':
  method     from
  as.zoo.xts zoo 
── Attaching packages ────────────────────────────────────── tidymodels 0.0.2 ──
✔ broom     0.5.1       ✔ purrr     0.3.2  
✔ dials     0.0.2       ✔ recipes   0.1.5  
✔ dplyr     0.8.0.1     ✔ rsample   0.0.4  
✔ infer     0.4.0       ✔ tibble    2.1.1  
✔ parsnip   0.0.2       ✔ yardstick 0.0.2  
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ purrr::discard()       masks scales::discard()
✖ dplyr::filter()        masks stats::filter()
✖ dplyr::lag()           masks stats::lag()
✖ purrr::lift()          masks caret::lift()
✖ yardstick::precision() masks caret::precision()
✖ yardstick::recall()    masks caret::recall()
✖ recipes::step()        masks stats::step()
> library(doParallel)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> cl <- makeForkCluster(nnodes = parallel::detectCores() - 1)
> registerDoParallel(cl)
> 
> # ------------------------------------------------------------------------------
> 
> load("../Data_Sets/OkCupid/okc.RData")
> load("../Data_Sets/OkCupid/okc_other.RData")
> load("../Data_Sets/OkCupid/okc_binary.RData")
> load("../Data_Sets/OkCupid/okc_features.RData")
> 
> # ------------------------------------------------------------------------------
> 
> okc_train <- 
+   okc_train %>%
+   full_join(okc_train_binary, by = "profile") %>%
+   full_join(basic_features_train, by = "profile") %>%
+   arrange(profile) %>%
+   dplyr::select(-profile, -where_state) 
> 
> # Determine which columns have 2 values and are numeric
> numero_two <- function(x) length(unique(x)) == 2 & is.numeric(x)
> 
> is_dummy <- map_lgl(okc_train, numero_two)
> dummies <- names(is_dummy)[is_dummy]
> 
> okc_rec <- 
+   recipe(Class ~ ., data = okc_train) %>%
+   step_bin2factor(!!! dummies) %>%
+   step_zv(all_predictors())
> 
> # ------------------------------------------------------------------------------
> 
> many_stats <-
+   function(data, lev = levels(data$obs), model = NULL) {
+     c(
+       twoClassSummary(data = data, lev = levels(data$obs), model),
+       prSummary(data = data, lev = levels(data$obs), model),
+       mnLogLoss(data = data, lev = levels(data$obs), model),
+       defaultSummary(data = data, lev = levels(data$obs), model)
+     )
+   }
> 
> # ------------------------------------------------------------------------------
> 
> sa_funcs <- caretSA
> sa_funcs$fitness_extern <- many_stats
> sa_funcs$initial <- function(vars, prob = 0.50, ...) 
+   sort(sample.int(vars, size = floor(vars * prob) + 1))
> 
> nb_grid <- data.frame(usekernel = TRUE, fL = 0, adjust = 1)
> 
> # Inner control for each model, use a random 10% validation set
> ctrl_rs <- trainControl(
+   method = "LGOCV", 
+   p = 0.90,
+   number = 1,
+   summaryFunction = many_stats, 
+   classProbs = TRUE,
+   allowParallel = FALSE
+ )
> 
> # Outer control for SA
> sa_ctrl <- safsControl(
+   method = "cv",
+   metric = c(internal = "ROC", external = "ROC"),
+   maximize = c(internal = TRUE, external = TRUE), 
+   functions = sa_funcs, 
+   improve = 10,
+   returnResamp = "all",
+   verbose = TRUE
+ )
> 
> options(digits = 3)
> 
> # Run simulated annealing
> set.seed(325)
> sim_anneal_50_pct <- safs(
+   okc_rec,
+   data = okc_train,
+   iters = 500,
+   safsControl = sa_ctrl,
+   method = "nb",
+   tuneGrid = nb_grid,
+   trControl = ctrl_rs,
+   metric = "ROC"
+ )
Preparing recipe
+ final SA
   1 0.787 (56)
   2 0.787->0.773 (56-1, 98.2%)  0.963  A
   3 0.787->0.791 (56-2, 96.4%) *
   4 0.791->0.792 (54-1, 98.1%) *
   5 0.792->0.742 (53+1, 98.1%)  0.731  A
   6 0.792->0.777 (53+0, 96.3%)  0.889  A
   7 0.792->0.775 (53+1, 94.5%)  0.86  A
   8 0.792->0.782 (53+2, 92.9%)  0.903  A
   9 0.792->0.778 (53+1, 91.1%)  0.849  A
  10 0.792->0.779 (53+2, 89.5%)  0.847  A
  11 0.792->0.772 (53+3, 87.9%)  0.758  
  12 0.792->0.772 (53+3, 87.9%)  0.739  A
  13 0.792->0.77 (53+4, 86.4%)  0.691  A
  14 0.792->0.769 (53+5, 85.0%)  0.667  
 restart, goto iter 4 
  15 0.792->0.779 (53+1, 98.1%)  0.983  A
  16 0.792->0.787 (53+2, 96.4%)  0.986  A
  17 0.792->0.772 (53+3, 94.6%)  0.926  
  18 0.792->0.77 (53+1, 94.5%)  0.893  A
  19 0.792->0.768 (53+2, 92.9%)  0.859  
  20 0.792->0.787 (53+0, 92.7%)  0.963  A
  21 0.792->0.766 (53+1, 91.1%)  0.795  A
  22 0.792->0.788 (53+0, 89.3%)  0.962  A
  23 0.792->0.761 (53-1, 87.5%)  0.705  A
  24 0.792->0.762 (53+0, 86.0%)  0.687  A
 restart, goto iter 4 
  25 0.792->0.788 (53-1, 98.1%)  0.995  A
  26 0.792->0.795 (53-2, 96.2%) *
  27 0.795->0.791 (51+1, 98.1%)  0.985  A
  28 0.795->0.797 (51+2, 96.2%) *
  29 0.797->0.783 (53+1, 98.1%)  0.914  A
  30 0.797->0.786 (53+0, 96.3%)  0.918  
  31 0.797->0.792 (53+0, 96.3%)  0.959  A
  32 0.797->0.791 (53-1, 94.4%)  0.944  A
  33 0.797->0.784 (53+0, 92.7%)  0.867  
  34 0.797->0.778 (53+0, 92.7%)  0.791  A
  35 0.797->0.792 (53+1, 91.1%)  0.929  A
  36 0.797->0.781 (53+2, 89.5%)  0.787  A
  37 0.797->0.777 (53+3, 87.9%)  0.725  
  38 0.797->0.764 (53+1, 87.7%)  0.559  A
 restart, goto iter 28 
  39 0.797->0.807 (53+1, 98.1%) *
  40 0.807->0.789 (54-1, 98.1%)  0.955  A
  41 0.807->0.8 (54-2, 96.3%)  0.973  A
  42 0.807->0.801 (54-3, 94.4%)  0.969  A
  43 0.807->0.793 (54-4, 92.6%)  0.919  A
  44 0.807->0.782 (54-3, 90.9%)  0.831  A
  45 0.807->0.784 (54-4, 89.1%)  0.817  A
  46 0.807->0.769 (54-5, 87.3%)  0.689  A
  47 0.807->0.797 (54-4, 85.7%)  0.894  A
  48 0.807->0.782 (54-3, 87.5%)  0.731  
  49 0.807->0.803 (54-3, 84.2%)  0.95  A
 restart, goto iter 39 
  50 0.807->0.786 (54-1, 98.1%)  0.974  A
  51 0.807->0.787 (54+0, 96.4%)  0.953  A
  52 0.807->0.79 (54-1, 94.5%)  0.94  A
  53 0.807->0.79 (54+0, 92.9%)  0.917  A
  54 0.807->0.808 (54+1, 91.2%) *
  55 0.808->0.789 (55-1, 98.2%)  0.868  A
  56 0.808->0.801 (55-2, 96.4%)  0.947  A
  57 0.808->0.786 (55-3, 94.5%)  0.806  A
  58 0.808->0.799 (55-2, 92.9%)  0.905  A
  59 0.808->0.777 (55-1, 91.2%)  0.686  A
  60 0.808->0.792 (55-2, 89.5%)  0.802  
  61 0.808->0.777 (55+0, 89.7%)  0.635  A
  62 0.808->0.774 (55-1, 87.9%)  0.584  
  63 0.808->0.8 (55+1, 88.1%)  0.879  A
  64 0.808->0.805 (55+0, 86.4%)  0.947  A
 restart, goto iter 54 
  65 0.808->0.782 (55+1, 98.2%)  0.969  A
  66 0.808->0.801 (55+2, 96.5%)  0.984  A
  67 0.808->0.782 (55+3, 94.8%)  0.909  A
  68 0.808->0.8 (55+2, 93.1%)  0.962  A
  69 0.808->0.797 (55+1, 91.4%)  0.934  A
  70 0.808->0.785 (55+0, 89.7%)  0.845  A
  71 0.808->0.788 (55-1, 87.9%)  0.842  
  72 0.808->0.793 (55-1, 87.9%)  0.863  A
  73 0.808->0.795 (55+0, 86.4%)  0.867  A
  74 0.808->0.799 (55-1, 84.7%)  0.899  A
 restart, goto iter 54 
  75 0.808->0.798 (55+1, 98.2%)  0.988  A
  76 0.808->0.796 (55+2, 96.5%)  0.971  A
  77 0.808->0.789 (55+1, 94.7%)  0.933  A
  78 0.808->0.801 (55+0, 93.0%)  0.967  A
  79 0.808->0.775 (55-1, 91.2%)  0.818  A
  80 0.808->0.784 (55+0, 89.7%)  0.838  A
  81 0.808->0.79 (55+1, 88.1%)  0.857  A
  82 0.808->0.777 (55+0, 86.4%)  0.736  A
  83 0.808->0.789 (55+1, 85.0%)  0.811  A
  84 0.808->0.774 (55+2, 83.6%)  0.661  A
 restart, goto iter 54 
  85 0.808->0.795 (55-1, 98.2%)  0.984  A
  86 0.808->0.81 (55-2, 96.4%) *
  87 0.81->0.8 (53+1, 98.1%)  0.963  A
  88 0.81->0.782 (53+0, 96.3%)  0.871  A
  89 0.81->0.775 (53-1, 94.4%)  0.805  A
  90 0.81->0.787 (53+0, 92.7%)  0.843  A
  91 0.81->0.793 (53+1, 91.1%)  0.863  A
  92 0.81->0.783 (53+2, 89.5%)  0.767  
  93 0.81->0.779 (53+0, 89.3%)  0.705  A
  94 0.81->0.765 (53+1, 87.7%)  0.571  
  95 0.81->0.779 (53-1, 87.5%)  0.652  A
  96 0.81->0.78 (53-2, 85.7%)  0.645  
 restart, goto iter 86 
  97 0.81->0.783 (53-1, 98.1%)  0.967  A
  98 0.81->0.798 (53+0, 96.3%)  0.97  A
  99 0.81->0.793 (53+1, 94.5%)  0.939  A
 100 0.81->0.808 (53+2, 92.9%)  0.989  A
 101 0.81->0.796 (53+1, 91.1%)  0.919  A
 102 0.81->0.79 (53+0, 89.3%)  0.861  A
 103 0.81->0.789 (53-1, 87.5%)  0.834  A
 104 0.81->0.8 (53-2, 85.7%)  0.903  A
 105 0.81->0.783 (53-1, 84.2%)  0.741  A
 106 0.81->0.799 (53+0, 82.8%)  0.868  A
 restart, goto iter 86 
 107 0.81->0.8 (53+1, 98.1%)  0.988  A
 108 0.81->0.788 (53+0, 100.0%)  0.947  
 109 0.81->0.781 (53+0, 96.3%)  0.898  A
 110 0.81->0.794 (53+1, 94.5%)  0.925  A
 111 0.81->0.794 (53+0, 92.7%)  0.907  A
 112 0.81->0.777 (53-1, 90.9%)  0.783  A
 113 0.81->0.786 (53+0, 89.3%)  0.811  A
 114 0.81->0.766 (53-1, 90.9%)  0.647  
 115 0.81->0.786 (53-1, 87.5%)  0.765  
 116 0.81->0.782 (53-1, 87.5%)  0.709  A
 restart, goto iter 86 
 117 0.81->0.785 (53+1, 98.1%)  0.97  
 118 0.81->0.794 (53+1, 98.1%)  0.961  A
 119 0.81->0.784 (53+0, 96.3%)  0.907  A
 120 0.81->0.789 (53-1, 94.4%)  0.903  A
 121 0.81->0.803 (53-2, 92.6%)  0.954  A
 122 0.81->0.792 (53-1, 90.9%)  0.873  A
 123 0.81->0.803 (53+0, 89.3%)  0.938  A
 124 0.81->0.793 (53+1, 87.7%)  0.844  A
 125 0.81->0.791 (53+2, 86.2%)  0.81  A
 126 0.81->0.806 (53+3, 84.7%)  0.946  A
 restart, goto iter 86 
 127 0.81->0.781 (53-1, 98.1%)  0.965  A
 128 0.81->0.78 (53+0, 96.3%)  0.928  A
 129 0.81->0.782 (53-1, 94.4%)  0.901  A
 130 0.81->0.794 (53+0, 92.7%)  0.925  A
 131 0.81->0.799 (53+1, 91.1%)  0.936  A
 132 0.81->0.787 (53+2, 89.5%)  0.845  A
 133 0.81->0.788 (53+1, 87.7%)  0.825  A
 134 0.81->0.778 (53+2, 86.2%)  0.725  
 135 0.81->0.783 (53+2, 86.2%)  0.742  A
 136 0.81->0.797 (53+1, 84.5%)  0.855  A
 restart, goto iter 86 
 137 0.81->0.794 (53-1, 98.1%)  0.98  A
 138 0.81->0.8 (53+0, 96.3%)  0.975  A
 139 0.81->0.788 (53+1, 94.5%)  0.922  A
 140 0.81->0.778 (53+2, 92.9%)  0.854  A
 141 0.81->0.785 (53+3, 91.2%)  0.856  A
 142 0.81->0.776 (53+4, 89.7%)  0.778  A
 143 0.81->0.787 (53+5, 88.1%)  0.822  A
 144 0.81->0.741 (53+4, 86.4%)  0.504  
 145 0.81->0.773 (53+4, 86.4%)  0.663  A
 146 0.81->0.783 (53+5, 85.0%)  0.717  A
 restart, goto iter 86 
 147 0.81->0.786 (53+1, 98.1%)  0.971  A
 148 0.81->0.782 (53+2, 96.4%)  0.933  A
 149 0.81->0.795 (53+3, 94.6%)  0.946  
 150 0.81->0.793 (53+1, 94.5%)  0.92  A
 151 0.81->0.781 (53+0, 92.7%)  0.835  A
 152 0.81->0.805 (53-1, 90.9%)  0.96  A
 153 0.81->0.777 (53-2, 89.1%)  0.749  
 154 0.81->0.786 (53+0, 89.3%)  0.788  A
 155 0.81->0.79 (53-1, 87.5%)  0.802  A
 156 0.81->0.798 (53+0, 86.0%)  0.864  A
 restart, goto iter 86 
 157 0.81->0.791 (53+1, 98.1%)  0.976  A
 158 0.81->0.802 (53+2, 96.4%)  0.981  A
 159 0.81->0.779 (53+3, 94.6%)  0.89  A
 160 0.81->0.804 (53+4, 93.0%)  0.971  A
 161 0.81->0.801 (53+3, 91.2%)  0.946  
 162 0.81->0.798 (53+5, 91.4%)  0.912  A
 163 0.81->0.818 (53+4, 89.7%) *
 164 0.818->0.776 (57-1, 98.2%)  0.666  A
 165 0.818->0.796 (57-2, 96.5%)  0.783  
 166 0.818->0.812 (57+0, 96.6%)  0.93  A
 167 0.818->0.774 (57+1, 94.9%)  0.556  A
 168 0.818->0.789 (57+0, 93.2%)  0.652  
 169 0.818->0.794 (57+2, 93.3%)  0.688  A
 170 0.818->0.765 (57+3, 91.8%)  0.402  A
 171 0.818->0.78 (57+2, 90.2%)  0.501  
 172 0.818->0.767 (57+4, 90.3%)  0.369  
 173 0.818->0.789 (57+4, 90.3%)  0.548  A
 restart, goto iter 163 
 174 0.818->0.819 (57-1, 98.2%) *
 175 0.819->0.811 (56+1, 98.2%)  0.98  A
 176 0.819->0.8 (56+2, 96.6%)  0.933  A
 177 0.819->0.798 (56+1, 94.8%)  0.904  A
 178 0.819->0.802 (56+2, 93.2%)  0.905  A
 179 0.819->0.779 (56+3, 91.7%)  0.75  A
 180 0.819->0.81 (56+2, 90.0%)  0.925  A
 181 0.819->0.795 (56+3, 88.5%)  0.794  
 182 0.819->0.813 (56+1, 88.3%)  0.944  A
 183 0.819->0.819 (56+2, 90.0%) *
 184 0.819->0.8 (58+1, 98.3%)  0.775  A
 185 0.819->0.804 (58+0, 96.6%)  0.808  A
 186 0.819->0.797 (58-1, 94.9%)  0.706  A
 187 0.819->0.803 (58+0, 93.3%)  0.758  A
 188 0.819->0.804 (58+1, 91.8%)  0.765  A
 189 0.819->0.789 (58+0, 90.2%)  0.553  A
 190 0.819->0.827 (58+1, 88.7%) *
 191 0.827->0.794 (59-1, 98.3%)  0.488  A
 192 0.827->0.807 (59+0, 96.7%)  0.628  A
 193 0.827->0.811 (59-1, 95.0%)  0.679  
 194 0.827->0.804 (59-1, 95.0%)  0.552  A
 195 0.827->0.81 (59-2, 93.3%)  0.625  
 196 0.827->0.809 (59-2, 93.3%)  0.608  
 197 0.827->0.806 (59-2, 93.3%)  0.54  
 198 0.827->0.803 (59+0, 93.4%)  0.484  
 199 0.827->0.807 (59-2, 93.3%)  0.533  A
 200 0.827->0.799 (59-3, 91.7%)  0.401  
 restart, goto iter 190 
 201 0.827->0.811 (59+1, 98.3%)  0.981  A
 202 0.827->0.811 (59+0, 96.7%)  0.961  A
 203 0.827->0.808 (59-1, 95.0%)  0.934  A
 204 0.827->0.8 (59-2, 93.3%)  0.877  A
 205 0.827->0.799 (59-3, 91.7%)  0.842  A
 206 0.827->0.793 (59-2, 90.2%)  0.783  A
 207 0.827->0.81 (59-3, 88.5%)  0.861  A
 208 0.827->0.809 (59-4, 86.9%)  0.84  A
 209 0.827->0.802 (59-3, 85.5%)  0.761  A
 210 0.827->0.802 (59-2, 84.1%)  0.734  A
 restart, goto iter 190 
 211 0.827->0.824 (59-1, 98.3%)  0.996  A
 212 0.827->0.81 (59+0, 96.7%)  0.96  
 213 0.827->0.817 (59+0, 96.7%)  0.962  A
 214 0.827->0.813 (59+1, 95.1%)  0.934  A
 215 0.827->0.809 (59+2, 93.5%)  0.894  A
 216 0.827->0.793 (59+3, 92.1%)  0.78  A
 217 0.827->0.802 (59+4, 90.6%)  0.81  A
 218 0.827->0.83 (59+5, 89.2%) *
 219 0.83->0.815 (64-1, 98.4%)  0.856  
 220 0.83->0.808 (64+1, 98.5%)  0.769  A
 221 0.83->0.795 (64+0, 96.9%)  0.63  
 222 0.83->0.816 (64+0, 96.9%)  0.818  A
 223 0.83->0.806 (64-1, 95.4%)  0.693  A
 224 0.83->0.828 (64-2, 93.8%)  0.978  A
 225 0.83->0.791 (64-3, 92.3%)  0.496  
 226 0.83->0.801 (64-3, 92.3%)  0.57  A
 227 0.83->0.797 (64-2, 90.9%)  0.513  A
 228 0.83->0.809 (64-3, 89.4%)  0.632  A
 restart, goto iter 218 
 229 0.83->0.819 (64-1, 98.4%)  0.987  A
 230 0.83->0.793 (64-2, 96.9%)  0.915  A
 231 0.83->0.794 (64-1, 95.4%)  0.88  
 232 0.83->0.807 (64-3, 95.3%)  0.897  A
 233 0.83->0.801 (64-2, 93.8%)  0.841  
 234 0.83->0.822 (64-4, 93.8%)  0.947  A
 235 0.83->0.824 (64-5, 92.2%)  0.953  A
 236 0.83->0.795 (64-4, 90.8%)  0.717  A
 237 0.83->0.817 (64-5, 89.2%)  0.871  A
 238 0.83->0.816 (64-4, 87.9%)  0.853  A
 restart, goto iter 218 
 239 0.83->0.817 (64-1, 98.4%)  0.985  A
 240 0.83->0.823 (64+0, 96.9%)  0.984  A
 241 0.83->0.799 (64-1, 95.4%)  0.894  A
 242 0.83->0.828 (64+0, 93.9%)  0.994  A
 243 0.83->0.799 (64-1, 92.4%)  0.829  A
 244 0.83->0.806 (64+0, 91.0%)  0.845  
 245 0.83->0.81 (64+0, 91.0%)  0.846  
 246 0.83->0.82 (64-2, 93.8%)  0.912  A
 247 0.83->0.797 (64-1, 95.4%)  0.701  A
 248 0.83->0.83 (64-2, 93.8%) *
 249 0.83->0.804 (62+1, 98.4%)  0.703  A
 250 0.83->0.818 (62+2, 96.9%)  0.841  A
 251 0.83->0.812 (62+1, 95.3%)  0.753  
 252 0.83->0.819 (62+1, 95.3%)  0.827  A
 253 0.83->0.811 (62+2, 93.8%)  0.708  
 254 0.83->0.814 (62+2, 93.8%)  0.736  A
 255 0.83->0.82 (62+1, 92.3%)  0.816  A
 256 0.83->0.791 (62+2, 90.9%)  0.422  
 257 0.83->0.807 (62+2, 90.9%)  0.586  A
 258 0.83->0.811 (62+1, 89.4%)  0.62  
 restart, goto iter 248 
 259 0.83->0.818 (62+1, 98.4%)  0.985  A
 260 0.83->0.799 (62+0, 96.8%)  0.927  A
 261 0.83->0.818 (62+1, 95.3%)  0.955  A
 262 0.83->0.811 (62+0, 93.8%)  0.912  A
 263 0.83->0.802 (62+1, 92.3%)  0.845  A
 264 0.83->0.805 (62+0, 90.8%)  0.832  A
 265 0.83->0.81 (62+1, 89.4%)  0.843  A
 266 0.83->0.825 (62+2, 88.1%)  0.95  A
 267 0.83->0.806 (62+1, 89.4%)  0.771  A
 268 0.83->0.818 (62+2, 88.1%)  0.865  A
 restart, goto iter 248 
 269 0.83->0.817 (62+1, 98.4%)  0.985  A
 270 0.83->0.8 (62+2, 96.9%)  0.929  
 271 0.83->0.799 (62+2, 96.9%)  0.891  A
 272 0.83->0.807 (62+1, 95.3%)  0.893  A
 273 0.83->0.807 (62+0, 93.8%)  0.87  A
 274 0.83->0.806 (62-1, 92.2%)  0.836  A
 275 0.83->0.82 (62-2, 90.6%)  0.92  A
 276 0.83->0.824 (62-1, 89.2%)  0.944  A
 277 0.83->0.804 (62+0, 87.9%)  0.752  A
 278 0.83->0.804 (62-1, 86.4%)  0.73  A
 restart, goto iter 248 
 279 0.83->0.823 (62-1, 98.4%)  0.991  A
 280 0.83->0.822 (62+0, 96.8%)  0.981  A
 281 0.83->0.815 (62+1, 95.3%)  0.946  A
 282 0.83->0.822 (62+2, 93.8%)  0.962  A
 283 0.83->0.809 (62+3, 92.4%)  0.877  A
 284 0.83->0.797 (62+2, 90.9%)  0.786  A
 285 0.83->0.812 (62+3, 92.4%)  0.853  A
 286 0.83->0.795 (62+2, 93.8%)  0.711  A
 287 0.83->0.805 (62+3, 92.4%)  0.761  A
 288 0.83->0.792 (62+2, 90.9%)  0.633  
 restart, goto iter 248 
 289 0.83->0.802 (62+1, 98.4%)  0.966  A
 290 0.83->0.819 (62+2, 96.9%)  0.974  A
 291 0.83->0.81 (62+1, 95.3%)  0.93  
 292 0.83->0.824 (62+1, 95.3%)  0.971  A
 293 0.83->0.812 (62+0, 96.8%)  0.895  A
 294 0.83->0.816 (62+1, 95.3%)  0.903  A
 295 0.83->0.804 (62+2, 93.8%)  0.799  A
 296 0.83->0.805 (62+3, 92.4%)  0.782  A
 297 0.83->0.816 (62+4, 93.9%)  0.859  A
 298 0.83->0.815 (62+3, 92.4%)  0.83  
 restart, goto iter 248 
 299 0.83->0.806 (62-1, 98.4%)  0.971  A
 300 0.83->0.813 (62+0, 96.8%)  0.958  A
 301 0.83->0.827 (62-1, 95.2%)  0.988  A
 302 0.83->0.824 (62+0, 93.8%)  0.968  A
 303 0.83->0.819 (62-1, 92.2%)  0.935  A
 304 0.83->0.799 (62-2, 90.6%)  0.795  A
 305 0.83->0.79 (62-3, 89.1%)  0.713  A
 306 0.83->0.799 (62-2, 87.7%)  0.737  A
 307 0.83->0.802 (62-3, 86.2%)  0.733  A
 308 0.83->0.805 (62-2, 84.8%)  0.733  A
 restart, goto iter 248 
 309 0.83->0.806 (62-1, 98.4%)  0.971  A
 310 0.83->0.817 (62-2, 96.8%)  0.968  A
 311 0.83->0.82 (62-3, 95.2%)  0.964  A
 312 0.83->0.814 (62-2, 93.7%)  0.925  A
 313 0.83->0.807 (62-1, 92.2%)  0.867  A
 314 0.83->0.793 (62+0, 90.8%)  0.762  A
 315 0.83->0.811 (62-1, 89.2%)  0.85  A
 316 0.83->0.787 (62-2, 87.7%)  0.657  A
 317 0.83->0.812 (62-1, 86.4%)  0.819  
 318 0.83->0.802 (62-1, 86.4%)  0.71  A
 restart, goto iter 248 
 319 0.83->0.811 (62+1, 98.4%)  0.977  A
 320 0.83->0.82 (62+0, 96.8%)  0.977  A
 321 0.83->0.816 (62-1, 95.2%)  0.948  A
 322 0.83->0.817 (62-2, 93.7%)  0.937  A
 323 0.83->0.82 (62-1, 92.2%)  0.938  A
 324 0.83->0.814 (62-2, 90.6%)  0.888  A
 325 0.83->0.825 (62-3, 89.1%)  0.958  A
 326 0.83->0.801 (62-2, 87.7%)  0.751  A
 327 0.83->0.822 (62-3, 86.2%)  0.914  A
 328 0.83->0.803 (62-2, 84.8%)  0.721  A
 restart, goto iter 248 
 329 0.83->0.805 (62-1, 98.4%)  0.97  A
 330 0.83->0.818 (62+0, 96.8%)  0.972  A
 331 0.83->0.811 (62-1, 95.2%)  0.932  A
 332 0.83->0.792 (62-2, 93.7%)  0.831  A
 333 0.83->0.784 (62-1, 92.2%)  0.757  A
 334 0.83->0.8 (62-2, 90.6%)  0.806  
 335 0.83->0.803 (62-2, 90.6%)  0.797  A
 336 0.83->0.784 (62-3, 89.1%)  0.642  A
 337 0.83->0.803 (62-4, 87.5%)  0.741  A
 338 0.83->0.804 (62-5, 85.9%)  0.732  A
 restart, goto iter 248 
 339 0.83->0.824 (62+1, 98.4%)  0.992  A
 340 0.83->0.81 (62+2, 96.9%)  0.952  A
 341 0.83->0.8 (62+3, 95.4%)  0.896  A
 342 0.83->0.811 (62+2, 93.8%)  0.912  A
 343 0.83->0.82 (62+3, 92.4%)  0.938  A
 344 0.83->0.807 (62+2, 90.9%)  0.847  A
 345 0.83->0.805 (62+1, 92.3%)  0.809  A
 346 0.83->0.813 (62+0, 90.8%)  0.85  
 347 0.83->0.814 (62+0, 90.8%)  0.835  A
 348 0.83->0.807 (62+1, 92.3%)  0.752  A
 restart, goto iter 248 
 349 0.83->0.802 (62+1, 98.4%)  0.967  A
 350 0.83->0.797 (62+0, 96.8%)  0.922  A
 351 0.83->0.823 (62-1, 95.2%)  0.974  A
 352 0.83->0.811 (62+0, 96.8%)  0.911  A
 353 0.83->0.82 (62+1, 95.3%)  0.938  A
 354 0.83->0.805 (62+0, 93.8%)  0.835  
 355 0.83->0.824 (62+0, 93.8%)  0.95  A
 356 0.83->0.837 (62+1, 92.3%) *
 357 0.837->0.808 (63+1, 98.4%)  0.729  
 358 0.837->0.798 (63-1, 98.4%)  0.627  A
 359 0.837->0.801 (63+0, 96.9%)  0.624  
 360 0.837->0.812 (63+0, 96.9%)  0.701  A
 361 0.837->0.784 (63-1, 95.3%)  0.439  A
 362 0.837->0.789 (63+0, 93.8%)  0.45  
 363 0.837->0.814 (63-2, 93.8%)  0.663  
 364 0.837->0.809 (63-2, 93.8%)  0.591  A
 365 0.837->0.79 (63-3, 92.2%)  0.385  
 366 0.837->0.81 (63-1, 92.3%)  0.565  A
 restart, goto iter 356 
 367 0.837->0.813 (63+1, 98.4%)  0.972  A
 368 0.837->0.821 (63+0, 96.9%)  0.963  A
 369 0.837->0.813 (63-1, 95.3%)  0.919  A
 370 0.837->0.819 (63-2, 93.8%)  0.916  A
 371 0.837->0.814 (63-1, 92.3%)  0.873  A
 372 0.837->0.805 (63-2, 90.8%)  0.794  A
 373 0.837->0.797 (63-3, 89.2%)  0.719  A
 374 0.837->0.819 (63-4, 87.7%)  0.839  
 375 0.837->0.808 (63-4, 87.7%)  0.73  A
 376 0.837->0.812 (63-5, 86.2%)  0.742  
 restart, goto iter 356 
 377 0.837->0.823 (63+1, 98.4%)  0.984  A
 378 0.837->0.798 (63+2, 96.9%)  0.911  A
 379 0.837->0.81 (63+3, 95.5%)  0.907  A
 380 0.837->0.813 (63+2, 93.9%)  0.891  A
 381 0.837->0.8 (63+3, 92.5%)  0.803  A
 382 0.837->0.807 (63+4, 91.2%)  0.805  A
 383 0.837->0.807 (63+3, 89.7%)  0.78  A
 384 0.837->0.814 (63+2, 88.2%)  0.802  A
 385 0.837->0.806 (63+1, 86.8%)  0.718  
 386 0.837->0.81 (63+3, 87.0%)  0.724  
 restart, goto iter 356 
 387 0.837->0.819 (63-1, 98.4%)  0.979  A
 388 0.837->0.811 (63-2, 96.8%)  0.939  A
 389 0.837->0.817 (63-1, 95.3%)  0.93  A
 390 0.837->0.801 (63+0, 93.8%)  0.841  A
 391 0.837->0.819 (63-1, 92.3%)  0.896  A
 392 0.837->0.812 (63-2, 90.8%)  0.837  A
 393 0.837->0.803 (63-3, 89.2%)  0.751  A
 394 0.837->0.818 (63-4, 87.7%)  0.837  A
 395 0.837->0.813 (63-3, 86.4%)  0.776  
 396 0.837->0.803 (63-5, 86.2%)  0.669  A
 restart, goto iter 356 
 397 0.837->0.814 (63-1, 98.4%)  0.973  A
 398 0.837->0.813 (63+0, 96.9%)  0.944  A
 399 0.837->0.801 (63-1, 95.3%)  0.879  A
 400 0.837->0.831 (63+0, 93.8%)  0.973  A
 401 0.837->0.808 (63+1, 92.4%)  0.84  
 402 0.837->0.806 (63-1, 92.3%)  0.803  A
 403 0.837->0.81 (63+0, 90.9%)  0.796  
 404 0.837->0.823 (63-2, 90.8%)  0.875  
 405 0.837->0.816 (63-2, 90.8%)  0.795  A
 406 0.837->0.829 (63-3, 89.2%)  0.911  A
 restart, goto iter 356 
 407 0.837->0.816 (63+1, 98.4%)  0.975  A
 408 0.837->0.812 (63+2, 96.9%)  0.943  A
 409 0.837->0.8 (63+3, 95.5%)  0.876  A
 410 0.837->0.824 (63+2, 93.9%)  0.938  A
 411 0.837->0.793 (63+1, 92.4%)  0.768  A
 412 0.837->0.82 (63+0, 90.9%)  0.886  
 413 0.837->0.802 (63+0, 90.9%)  0.744  
 414 0.837->0.81 (63+0, 90.9%)  0.775  A
 415 0.837->0.815 (63-1, 89.4%)  0.793  
 416 0.837->0.811 (63-1, 89.4%)  0.733  
 restart, goto iter 356 
 417 0.837->0.807 (63-1, 98.4%)  0.965  A
 418 0.837->0.829 (63-2, 96.8%)  0.981  A
 419 0.837->0.817 (63-1, 95.3%)  0.931  A
 420 0.837->0.821 (63-2, 93.8%)  0.927  A
 421 0.837->0.803 (63-3, 92.2%)  0.817  A
 422 0.837->0.808 (63-2, 90.8%)  0.81  A
 423 0.837->0.805 (63-3, 92.2%)  0.764  A
 424 0.837->0.828 (63-4, 90.6%)  0.915  A
 425 0.837->0.783 (63-5, 89.1%)  0.557  
 426 0.837->0.803 (63-5, 89.1%)  0.664  
 restart, goto iter 356 
 427 0.837->0.803 (63-1, 98.4%)  0.96  A
 428 0.837->0.816 (63+0, 96.9%)  0.951  A
 429 0.837->0.81 (63-1, 95.3%)  0.908  
 430 0.837->0.814 (63+1, 95.4%)  0.894  A
 431 0.837->0.8 (63+2, 93.9%)  0.8  
 432 0.837->0.815 (63+0, 93.8%)  0.856  
 433 0.837->0.82 (63+0, 93.8%)  0.864  A
 434 0.837->0.814 (63+1, 92.4%)  0.805  A
 435 0.837->0.818 (63+2, 91.0%)  0.813  A
 436 0.837->0.814 (63+1, 92.4%)  0.757  A
 restart, goto iter 356 
 437 0.837->0.815 (63-1, 98.4%)  0.974  A
 438 0.837->0.817 (63+0, 96.9%)  0.953  A
 439 0.837->0.823 (63-1, 95.3%)  0.952  A
 440 0.837->0.821 (63+0, 93.8%)  0.928  A
 441 0.837->0.814 (63-1, 92.3%)  0.873  A
 442 0.837->0.825 (63+0, 90.9%)  0.92  A
 443 0.837->0.818 (63-1, 89.4%)  0.854  
 444 0.837->0.812 (63+1, 89.6%)  0.79  
 445 0.837->0.828 (63-1, 89.4%)  0.904  A
 446 0.837->0.826 (63+0, 88.1%)  0.878  
 restart, goto iter 356 
 447 0.837->0.809 (63+1, 98.4%)  0.967  A
 448 0.837->0.813 (63+0, 96.9%)  0.945  A
 449 0.837->0.807 (63-1, 95.3%)  0.898  A
 450 0.837->0.801 (63-2, 93.8%)  0.844  A
 451 0.837->0.816 (63-1, 92.3%)  0.88  A
 452 0.837->0.827 (63-2, 93.8%)  0.934  
 453 0.837->0.821 (63+0, 90.9%)  0.872  A
 454 0.837->0.832 (63-1, 89.4%)  0.955  A
 455 0.837->0.804 (63+0, 88.1%)  0.7  A
 456 0.837->0.817 (63-1, 86.6%)  0.79  A
 restart, goto iter 356 
 457 0.837->0.813 (63+1, 98.4%)  0.971  A
 458 0.837->0.815 (63+0, 96.9%)  0.948  A
 459 0.837->0.81 (63-1, 95.3%)  0.906  A
 460 0.837->0.798 (63+0, 93.8%)  0.831  A
 461 0.837->0.805 (63-1, 92.3%)  0.824  A
 462 0.837->0.804 (63-2, 90.8%)  0.791  A
 463 0.837->0.807 (63-3, 89.2%)  0.781  A
 464 0.837->0.798 (63-2, 87.9%)  0.687  A
 465 0.837->0.795 (63-1, 86.6%)  0.637  
 466 0.837->0.804 (63-1, 86.6%)  0.672  
 restart, goto iter 356 
 467 0.837->0.824 (63+1, 98.4%)  0.985  A
 468 0.837->0.8 (63+0, 96.9%)  0.915  A
 469 0.837->0.797 (63-1, 98.4%)  0.866  A
 470 0.837->0.816 (63-2, 96.8%)  0.903  A
 471 0.837->0.806 (63-3, 95.2%)  0.83  A
 472 0.837->0.816 (63-4, 93.7%)  0.86  
 473 0.837->0.796 (63-4, 93.7%)  0.711  A
 474 0.837->0.809 (63-3, 92.2%)  0.768  A
 475 0.837->0.811 (63-4, 90.6%)  0.76  A
 476 0.837->0.791 (63-5, 89.1%)  0.577  A
 restart, goto iter 356 
 477 0.837->0.829 (63+1, 98.4%)  0.991  A
 478 0.837->0.823 (63+0, 96.9%)  0.968  A
 479 0.837->0.803 (63-1, 95.3%)  0.886  A
 480 0.837->0.789 (63-2, 93.8%)  0.797  A
 481 0.837->0.813 (63-3, 92.2%)  0.868  
 482 0.837->0.79 (63-1, 92.3%)  0.715  A
 483 0.837->0.809 (63-2, 90.8%)  0.794  A
 484 0.837->0.8 (63-1, 89.4%)  0.7  
 485 0.837->0.831 (63-1, 89.4%)  0.936  A
 486 0.837->0.797 (63-2, 87.9%)  0.621  A
 restart, goto iter 356 
 487 0.837->0.824 (63+1, 98.4%)  0.984  A
 488 0.837->0.799 (63+2, 96.9%)  0.913  A
 489 0.837->0.814 (63+3, 95.5%)  0.921  A
 490 0.837->0.825 (63+4, 94.0%)  0.946  A
 491 0.837->0.81 (63+5, 92.6%)  0.852  
 492 0.837->0.82 (63+3, 92.5%)  0.887  A
 493 0.837->0.819 (63+2, 91.0%)  0.858  A
 494 0.837->0.811 (63+1, 89.6%)  0.783  A
 495 0.837->0.806 (63+0, 88.1%)  0.714  A
 496 0.837->0.799 (63-1, 86.6%)  0.639  A
 restart, goto iter 356 
 497 0.837->0.816 (63+1, 98.4%)  0.975  A
 498 0.837->0.826 (63+2, 96.9%)  0.975  A
 499 0.837->0.819 (63+3, 95.5%)  0.939  A
 500 0.837->0.815 (63+4, 94.0%)  0.9  A
+ final model
There were 50 or more warnings (use warnings() to see the first 50)
> 
> # Random Subset Validation -----------------------------------------------------
> 
> sa_subset_size <- length(sim_anneal_50_pct$optVariables)
> iter <- 100
> vars <- names(okc_train)
> vars <- vars[vars != "Class"]
> 
> subset_ctrl <- trainControl(
+   method = "cv",
+   classProbs = TRUE,
+   summaryFunction = many_stats
+ )
> 
> for (i in 1:iter) {
+   set.seed(7883 + i)
+   rand_subset <- sample(vars, sa_subset_size)
+   subset_dat <- okc_train %>% dplyr::select(Class, !!!rand_subset)
+   
+   is_dummy <- map_lgl(subset_dat, numero_two)
+   dummies <- names(is_dummy)[is_dummy]
+   
+   subset_rec <- 
+     recipe(Class ~ ., data = subset_dat) %>%
+     step_bin2factor(!!! dummies) %>%
+     step_zv(all_predictors())
+   
+   set.seed(325)
+   subset_model <- train(
+     subset_rec,
+     data = subset_dat,
+     method = "nb",
+     tuneGrid = nb_grid,
+     trControl = subset_ctrl,
+     metric = "ROC"
+   )
+   subset_perf <- getTrainPerf(subset_model)
+   
+   if (i == 1) {
+     sa_size_check <- subset_perf
+   } else {
+     sa_size_check <- bind_rows(sa_size_check, subset_perf)
+   }
+   rm(rand_subset, subset_rec, subset_model, subset_perf, is_dummy, dummies, subset_dat)
+ }
> 
> # ------------------------------------------------------------------------------
> # Remove some objects to make the file size smaller
> 
> sim_anneal_50_pct$fit$control$index <- NULL
> sim_anneal_50_pct$fit$control$indexOut <- NULL
> sim_anneal_50_pct$fit$finalModel$x <- NULL
> sim_anneal_50_pct$sa$fit$trainingData <- NULL
> sim_anneal_50_pct$sa$fit$control$index <- NULL
> sim_anneal_50_pct$sa$fit$control$indexOut <- NULL
> sim_anneal_50_pct$sa$fit$finalModel$x <- NULL
> sim_anneal_50_pct$control$index <- NULL
> sim_anneal_50_pct$control$indexOut <- NULL
> sim_anneal_50_pct$recipe$template <- NULL
> attr(sim_anneal_50_pct$recipe$steps[[2]]$terms[[1]], ".Environment") <- emptyenv()
> 
> # ------------------------------------------------------------------------------
> 
> save(sim_anneal_50_pct, sa_size_check, file = "sim_anneal_50_pct.RData")
> 
> # ------------------------------------------------------------------------------
> 
> stopCluster(cl)
> 
> if (!interactive())
+   q("no")
> proc.time()
   user  system elapsed 
   9247     271   20340 
