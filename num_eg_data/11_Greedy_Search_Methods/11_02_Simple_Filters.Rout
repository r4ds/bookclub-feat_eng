
R Under development (unstable) (2019-03-18 r76245) -- "Unsuffered Consequences"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # ------------------------------------------------------------------------------
> # Feature Engineering and Selection: A Practical Approach for Predictive Models
> # by Max Kuhn and Kjell Johnson
> #
> # ------------------------------------------------------------------------------
> # 
> # Code for Section 12.2 at
> # https://bookdown.org/max/FES/greedy.html#simple-filters
> #
> # ------------------------------------------------------------------------------
> # 
> # Code requires these packages: 
> 
> library(caret)
Loading required package: lattice
Loading required package: ggplot2
Registered S3 methods overwritten by 'ggplot2':
  method         from 
  [.quosures     rlang
  c.quosures     rlang
  print.quosures rlang
> library(tidymodels)
Registered S3 method overwritten by 'xts':
  method     from
  as.zoo.xts zoo 
── Attaching packages ────────────────────────────────────── tidymodels 0.0.2 ──
✔ broom     0.5.1       ✔ purrr     0.3.2  
✔ dials     0.0.2       ✔ recipes   0.1.5  
✔ dplyr     0.8.0.1     ✔ rsample   0.0.4  
✔ infer     0.4.0       ✔ tibble    2.1.1  
✔ parsnip   0.0.2       ✔ yardstick 0.0.2  
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ purrr::discard()       masks scales::discard()
✖ dplyr::filter()        masks stats::filter()
✖ dplyr::lag()           masks stats::lag()
✖ purrr::lift()          masks caret::lift()
✖ yardstick::precision() masks caret::precision()
✖ yardstick::recall()    masks caret::recall()
✖ recipes::step()        masks stats::step()
> library(pROC)
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following objects are masked from ‘package:stats’:

    cov, smooth, var

> library(doParallel)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> 
> cl <- makeForkCluster(nnodes = parallel::detectCores() - 1)
> registerDoParallel(cl)
> 
> # ------------------------------------------------------------------------------
> 
> load("../Data_Sets/Parkinsons_Disease/pd_split.RData")
> 
> # Create an initial recipe -----------------------------------------------------
> 
> pd_rec <-
+   recipe(Class ~ ., data = pd_tr) %>%
+   step_YeoJohnson(all_predictors())  %>%
+   step_center(all_predictors()) %>%
+   step_scale(all_predictors())
> 
> basic_pred <-
+   prep(pd_rec, training = pd_tr, retain = TRUE) %>%
+   juice(all_predictors(), composition = "data.frame")
There were 50 or more warnings (use warnings() to see the first 50)
> 
> ncol(basic_pred)
[1] 750
> 
> # ------------------------------------------------------------------------------
> 
> many_stats <-
+   function(data, lev = levels(data$obs), model = NULL) {
+     c(
+       twoClassSummary(data = data, lev = levels(data$obs), model),
+       prSummary(data = data, lev = levels(data$obs), model),
+       mnLogLoss(data = data, lev = levels(data$obs), model),
+       defaultSummary(data = data, lev = levels(data$obs), model)
+     )
+   }
> 
> # Make the overall model -------------------------------------------------------
> 
> tr_ctrl <- trainControl(
+   method = "repeatedcv",
+   repeats = 5,
+   classProbs = TRUE,
+   summaryFunction = many_stats
+ )
> 
> set.seed(184)
> full_model <- train(
+   pd_rec,
+   data = pd_tr,
+   method = "widekernelpls",
+   tuneLength = 20,
+   trControl = tr_ctrl,
+   metric = "ROC"
+ )
Loading required namespace: pls
There were 50 or more warnings (use warnings() to see the first 50)
> 
> # Setup the filtering options and control objects ------------------------------
> 
> roc_filter <- caretSBF
> 
> roc_filter$summary <- many_stats
> 
> roc_filter$score <- function(x, y) {
+   # Get the areas under the ROC curve for each predictor
+   roc_vals <- filterVarImp(x, y)
+   # return a named vector:
+   res <- roc_vals$PD
+   names(res) <- rownames(roc_vals)
+   rownames(res) <- NULL
+   res
+ }
> 
> roc_filter$filter <- function(score, x, y)  {
+   res <- score >= 0.80
+   # But always keep at least two
+   if (sum(res) < 2) {
+     ord_by_best <- seq_along(score)[order(score, decreasing = TRUE)]
+     res[head(ord_by_best, 2)] <- TRUE
+   }
+   res
+ }
> 
> sbf_ctrl <- sbfControl(
+   method = "repeatedcv",
+   repeats = 5,
+   functions = roc_filter,
+   multivariate = TRUE
+ )
> 
> internal_ctrl <- trainControl(
+   method = "boot",
+   number = 20,
+   classProbs = TRUE,
+   summaryFunction = many_stats,
+   allowParallel = FALSE
+ )
> 
> # Filtering and models ---------------------------------------------------------
> 
> set.seed(184)
> pls_filtered <- sbf(
+   pd_rec,
+   data = pd_tr,
+   sbfControl = sbf_ctrl,
+   # options for `train()`:
+   method = "widekernelpls",
+   tuneLength = 20,
+   trControl = internal_ctrl,
+   metric = "ROC"
+ )
There were 50 or more warnings (use warnings() to see the first 50)
> 
> # Random subset size validation ------------------------------------------------
> 
> subset_size <- length(pls_filtered$optVariables)
> iter <- 100
> vars <- names(basic_pred)
> 
> subset_ctrl <- trainControl(
+   method = "repeatedcv",
+   repeats = 5,
+   index = tr_ctrl$index,
+   indexOut = tr_ctrl$indexOut,
+   classProbs = TRUE,
+   summaryFunction = many_stats
+ )
> 
> for (i in 1:iter) {
+   set.seed(14 + i)
+   rand_subset <- sample(vars, subset_size)
+ 
+   subset_rec <-
+     recipe(Class ~ ., data = pd_tr[, c("Class", rand_subset)]) %>%
+     step_YeoJohnson(all_predictors())  %>%
+     step_center(all_predictors()) %>%
+     step_scale(all_predictors())
+ 
+   subset_model <- train(
+     pd_rec,
+     data = pd_tr,
+     method = "widekernelpls",
+     tuneLength = 20,
+     trControl = subset_ctrl,
+     metric = "ROC"
+   )
+   subset_perf <- getTrainPerf(subset_model)
+   subset_perf$ncomp <- subset_model$bestTune$ncomp
+   if (i == 1) {
+     size_check <- subset_perf
+   } else {
+     size_check <- bind_rows(size_check, subset_perf)
+   }
+   rm(rand_subset, subset_rec, subset_model, subset_perf)
+ }
There were 50 or more warnings (use warnings() to see the first 50)
> 
> subset_size
[1] 5
> mean(size_check$TrainROC <= pls_filtered$results$ROC)
[1] 0.97
> 
> # ------------------------------------------------------------------------------
> 
> save(pls_filtered, full_model, size_check, file = "pls_filtered.RData")
> 
> # ------------------------------------------------------------------------------
> 
> sessionInfo()
R Under development (unstable) (2019-03-18 r76245)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS High Sierra 10.13.6

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] doParallel_1.0.14 iterators_1.0.10  foreach_1.4.4     pROC_1.14.0      
 [5] yardstick_0.0.2   tibble_2.1.1      rsample_0.0.4     tidyr_0.8.3      
 [9] recipes_0.1.5     purrr_0.3.2       parsnip_0.0.2     infer_0.4.0      
[13] dplyr_0.8.0.1     dials_0.0.2       scales_1.0.0      broom_0.5.1      
[17] tidymodels_0.0.2  caret_6.0-82      ggplot2_3.1.0     lattice_0.20-38  

loaded via a namespace (and not attached):
  [1] minqa_1.2.4         colorspace_1.4-1    class_7.3-15       
  [4] ggridges_0.5.1      rsconnect_0.8.13    markdown_0.9       
  [7] pls_2.7-1           base64enc_0.1-3     tidytext_0.2.0     
 [10] rstudioapi_0.10     rstan_2.18.2        SnowballC_0.6.0    
 [13] DT_0.5              prodlim_2018.04.18  lubridate_1.7.4    
 [16] codetools_0.2-16    splines_3.6.0       knitr_1.22         
 [19] shinythemes_1.1.2   bayesplot_1.6.0     nloptr_1.2.1       
 [22] shiny_1.2.0         compiler_3.6.0      backports_1.1.3    
 [25] assertthat_0.2.1    Matrix_1.2-16       lazyeval_0.2.2     
 [28] cli_1.1.0           later_0.8.0         htmltools_0.3.6    
 [31] prettyunits_1.0.2   tools_3.6.0         igraph_1.2.4       
 [34] gtable_0.2.0        glue_1.3.1          reshape2_1.4.3     
 [37] Rcpp_1.0.1          gdata_2.18.0        nlme_3.1-137       
 [40] crosstalk_1.0.0     timeDate_3043.102   gower_0.2.0        
 [43] xfun_0.5            stringr_1.4.0       ps_1.3.0           
 [46] lme4_1.1-20         mime_0.6            miniUI_0.1.1.1     
 [49] gtools_3.8.1        tidypredict_0.3.0   MLmetrics_1.1.1    
 [52] MASS_7.3-51.4       zoo_1.8-5           ipred_0.9-8        
 [55] rstanarm_2.18.2     colourpicker_1.0    promises_1.0.1     
 [58] inline_0.3.15       shinystan_2.5.0     tidyposterior_0.0.2
 [61] gridExtra_2.3       loo_2.0.0           StanHeaders_2.18.1 
 [64] rpart_4.1-13        stringi_1.4.3       tokenizers_0.2.1   
 [67] dygraphs_1.1.1.6    e1071_1.7-0.1       caTools_1.17.1.1   
 [70] pkgbuild_1.0.3      lava_1.6.5          bitops_1.0-6       
 [73] rlang_0.3.3         pkgconfig_2.0.2     matrixStats_0.54.0 
 [76] ROCR_1.0-7          rstantools_1.5.1    htmlwidgets_1.3    
 [79] processx_3.3.0      tidyselect_0.2.5    plyr_1.8.4         
 [82] magrittr_1.5        R6_2.4.0            gplots_3.0.1.1     
 [85] generics_0.0.2      pillar_1.3.1        withr_2.1.2        
 [88] xts_0.11-2          survival_2.43-3     nnet_7.3-12        
 [91] janeaustenr_0.1.5   crayon_1.3.4        KernSmooth_2.23-15 
 [94] grid_3.6.0          data.table_1.12.0   callr_3.2.0        
 [97] ModelMetrics_1.2.2  threejs_0.3.1       digest_0.6.18      
[100] xtable_1.8-3        httpuv_1.4.5.1      stats4_3.6.0       
[103] munsell_0.5.0       shinyjs_1.0        
> 
> if (!interactive())
+   q("no")
> proc.time()
    user   system  elapsed 
 603.749  138.995 1155.873 
