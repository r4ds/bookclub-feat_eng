
R Under development (unstable) (2019-03-18 r76245) -- "Unsuffered Consequences"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # ------------------------------------------------------------------------------
> # Feature Engineering and Selection: A Practical Approach for Predictive Models
> # by Max Kuhn and Kjell Johnson
> #
> # ------------------------------------------------------------------------------
> # 
> # Code for Section 12.3 at
> # https://bookdown.org/max/FES/greedy.html#recursive-feature-elimination
> #
> # ------------------------------------------------------------------------------
> # 
> # Code requires these packages: 
> 
> library(caret)
Loading required package: lattice
Loading required package: ggplot2
Registered S3 methods overwritten by 'ggplot2':
  method         from 
  [.quosures     rlang
  c.quosures     rlang
  print.quosures rlang
> library(tidymodels)
Registered S3 method overwritten by 'xts':
  method     from
  as.zoo.xts zoo 
── Attaching packages ────────────────────────────────────── tidymodels 0.0.2 ──
✔ broom     0.5.1       ✔ purrr     0.3.2  
✔ dials     0.0.2       ✔ recipes   0.1.5  
✔ dplyr     0.8.0.1     ✔ rsample   0.0.4  
✔ infer     0.4.0       ✔ tibble    2.1.1  
✔ parsnip   0.0.2       ✔ yardstick 0.0.2  
── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──
✖ purrr::discard()       masks scales::discard()
✖ dplyr::filter()        masks stats::filter()
✖ dplyr::lag()           masks stats::lag()
✖ purrr::lift()          masks caret::lift()
✖ yardstick::precision() masks caret::precision()
✖ yardstick::recall()    masks caret::recall()
✖ recipes::step()        masks stats::step()
> library(pROC)
Type 'citation("pROC")' for a citation.

Attaching package: ‘pROC’

The following objects are masked from ‘package:stats’:

    cov, smooth, var

> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:dplyr’:

    combine

The following object is masked from ‘package:ggplot2’:

    margin

> library(doParallel)
Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
> 
> cl <- makeForkCluster(nnodes = parallel::detectCores() - 1)
> registerDoParallel(cl)
> 
> # ------------------------------------------------------------------------------
> 
> load("../Data_Sets/Parkinsons_Disease/pd_split.RData")
> 
> # RFE using ROC Curve Ranking --------------------------------------------------
> 
> many_stats <-
+   function(data, lev = levels(data$obs), model = NULL) {
+     c(
+       twoClassSummary(data = data, lev = levels(data$obs), model),
+       prSummary(data = data, lev = levels(data$obs), model),
+       mnLogLoss(data = data, lev = levels(data$obs), model),
+       defaultSummary(data = data, lev = levels(data$obs), model)
+     )
+   }
> 
> rfe_funcs <- caret::rfFuncs
> 
> rfe_funcs$summary <- many_stats
> 
> # Use the ROC AUC values for feature ranking
> rfe_funcs$rank <- function(object, x, y) {
+   roc_vals <- filterVarImp(x, y)
+   roc_vals$var <- rownames(roc_vals)
+   names(roc_vals)[1] <- "Overall"
+   rownames(roc_vals) <- NULL
+   roc_vals$control <- NULL
+   roc_vals[order(-roc_vals$Overall),, drop = FALSE]
+ }
> 
> # Outer control for RFE; same resamples as before
> rfe_ctrl <- rfeControl(
+   method = "repeatedcv",
+   repeats = 5,
+   functions = rfe_funcs,
+   returnResamp = "all",
+   verbose = TRUE
+ )
> 
> pd_rec <- 
+   recipe(Class ~ ., data = pd_tr) %>% 
+   step_corr(all_predictors(), threshold = 0.5)
> 
> # ------------------------------------------------------------------------------
> 
> sizes <- unique(floor(10^seq(0, 2.87, length = 50)))
> 
> # When running the RFE procedures in parallel, each worker will require about
> # 600MB of memory. 
> 
> set.seed(184)
> rf_roc_filter <- rfe(
+   pd_rec,
+   data = pd_tr,
+   sizes = sizes,
+   rfeControl = rfe_ctrl,
+   metric = "ROC",
+   ntree = 10000
+ )
Preparing recipe
Warning message:
For the training set, the recipe generated fewer predictors than the 741 expected in `sizes` and the number of subsets will be truncated to be <= 158. 
> 
> set.seed(184)
> rf_roc_all <- rfe(
+   Class ~ .,
+   data = pd_tr,
+   sizes = sizes,
+   rfeControl = rfe_ctrl,
+   metric = "ROC",
+   ntree = 10000
+ )
> 
> # RFE with Random Forest Ranking -----------------------------------------------
> 
> imp_ctrl <- rfe_ctrl
> imp_ctrl$functions$rank <- caret::rfFuncs$rank
> 
> set.seed(184)
> rf_imp_rfe_filter <- rfe(
+   pd_rec,
+   data = pd_tr,
+   sizes = sizes,
+   rfeControl = imp_ctrl,
+   metric = "ROC",
+   ntree = 10000
+ )
Preparing recipe
Warning message:
For the training set, the recipe generated fewer predictors than the 741 expected in `sizes` and the number of subsets will be truncated to be <= 158. 
> 
> set.seed(184)
> rf_imp_rfe_all <- rfe(
+   Class ~ .,
+   data = pd_tr,
+   sizes = sizes,
+   rfeControl = imp_ctrl,
+   metric = "ROC",
+   ntree = 10000
+ )
> 
> rf_res <- 
+   rf_roc_filter %>% 
+   pluck("results") %>% 
+   mutate(predictors = "Correlation Filter", Importance = "ROC") %>% 
+   bind_rows(
+     rf_roc_all %>% pluck("results") %>% mutate(predictors = "All Predictors", Importance = "ROC", Num_Resamples = 20),
+     rf_imp_rfe_filter %>% pluck("results") %>% mutate(predictors = "Correlation Filter", Importance = "RF"),
+     rf_imp_rfe_all %>% pluck("results") %>% mutate(predictors = "All Predictors", Importance = "RF", Num_Resamples = 20),
+   ) %>% 
+   dplyr::filter(Num_Resamples >= 10) 
> 
> 
> # Random Subset Size Validation ------------------------------------------------
> 
> subset_size <- length(rf_roc_all$optVariables)
> iter <- 100
> 
> vars <- 
+   pd_tr %>% 
+   dplyr::select(-Class) %>%
+   names()
> 
> subset_ctrl <- trainControl(
+   method = "repeatedcv",
+   repeats = 5,
+   index = rf_roc_all$index,
+   indexOut = rf_roc_all$indexOut,
+   classProbs = TRUE,
+   summaryFunction = many_stats
+ )
> 
> for (i in 1:iter) {
+   set.seed(14 + i)
+   rand_subset <- sample(vars, subset_size)
+ 
+   subset_model <- train(
+     Class ~ .,
+     data = pd_tr[, c("Class", rand_subset)],
+     method = "rf",
+     tuneGrid = data.frame(mtry = floor(sqrt(subset_size))),
+     trControl = subset_ctrl,
+     metric = "ROC",
+     ntree = 10000
+   )
+   subset_perf <- getTrainPerf(subset_model)
+   if (i == 1) {
+     rf_size_check <- subset_perf
+   } else {
+     rf_size_check <- bind_rows(rf_size_check, subset_perf)
+   }
+   rm(rand_subset, subset_model, subset_perf)
+ }
> 
> # ------------------------------------------------------------------------------
> # Make the objects smaller by removing redundant fields and converting to factor
> 
> rf_imp_rfe_filter$variables <-
+   rf_imp_rfe_filter$variables %>%
+   mutate(var = as.factor(var),
+          Resample = as.factor(Resample))
> 
> rf_imp_rfe_all$variables <-
+   rf_imp_rfe_all$variables %>%
+   mutate(var = as.factor(var),
+          Resample = as.factor(Resample))
> 
> rf_roc_filter$variables <-
+   rf_roc_filter$variables %>%
+   mutate(var = as.factor(var),
+          Resample = as.factor(Resample))
> 
> rf_roc_all$variables <-
+   rf_roc_all$variables %>%
+   mutate(var = as.factor(var),
+          Resample = as.factor(Resample))
> 
> save(rf_imp_rfe_filter, rf_imp_rfe_all, rf_roc_filter, rf_roc_all, 
+      rf_res, rf_size_check, file = "pd_rf_rfe.RData")
> 
> # ------------------------------------------------------------------------------
> 
> sessionInfo()
R Under development (unstable) (2019-03-18 r76245)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS High Sierra 10.13.6

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.6/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] doParallel_1.0.14   iterators_1.0.10    foreach_1.4.4      
 [4] randomForest_4.6-14 pROC_1.14.0         yardstick_0.0.2    
 [7] tibble_2.1.1        rsample_0.0.4       tidyr_0.8.3        
[10] recipes_0.1.5       purrr_0.3.2         parsnip_0.0.2      
[13] infer_0.4.0         dplyr_0.8.0.1       dials_0.0.2        
[16] scales_1.0.0        broom_0.5.1         tidymodels_0.0.2   
[19] caret_6.0-82        ggplot2_3.1.0       lattice_0.20-38    

loaded via a namespace (and not attached):
  [1] minqa_1.2.4         colorspace_1.4-1    class_7.3-15       
  [4] ggridges_0.5.1      rsconnect_0.8.13    markdown_0.9       
  [7] base64enc_0.1-3     tidytext_0.2.0      rstudioapi_0.10    
 [10] rstan_2.18.2        SnowballC_0.6.0     DT_0.5             
 [13] prodlim_2018.04.18  lubridate_1.7.4     codetools_0.2-16   
 [16] splines_3.6.0       knitr_1.22          shinythemes_1.1.2  
 [19] bayesplot_1.6.0     nloptr_1.2.1        shiny_1.2.0        
 [22] compiler_3.6.0      backports_1.1.3     assertthat_0.2.1   
 [25] Matrix_1.2-16       lazyeval_0.2.2      cli_1.1.0          
 [28] later_0.8.0         htmltools_0.3.6     prettyunits_1.0.2  
 [31] tools_3.6.0         igraph_1.2.4        gtable_0.2.0       
 [34] glue_1.3.1          reshape2_1.4.3      Rcpp_1.0.1         
 [37] gdata_2.18.0        nlme_3.1-137        crosstalk_1.0.0    
 [40] timeDate_3043.102   gower_0.2.0         xfun_0.5           
 [43] stringr_1.4.0       ps_1.3.0            lme4_1.1-20        
 [46] mime_0.6            miniUI_0.1.1.1      gtools_3.8.1       
 [49] tidypredict_0.3.0   MLmetrics_1.1.1     MASS_7.3-51.4      
 [52] zoo_1.8-5           ipred_0.9-8         rstanarm_2.18.2    
 [55] colourpicker_1.0    promises_1.0.1      inline_0.3.15      
 [58] shinystan_2.5.0     tidyposterior_0.0.2 gridExtra_2.3      
 [61] loo_2.0.0           StanHeaders_2.18.1  rpart_4.1-13       
 [64] stringi_1.4.3       tokenizers_0.2.1    dygraphs_1.1.1.6   
 [67] e1071_1.7-0.1       caTools_1.17.1.1    pkgbuild_1.0.3     
 [70] lava_1.6.5          bitops_1.0-6        rlang_0.3.3        
 [73] pkgconfig_2.0.2     matrixStats_0.54.0  ROCR_1.0-7         
 [76] rstantools_1.5.1    htmlwidgets_1.3     processx_3.3.0     
 [79] tidyselect_0.2.5    plyr_1.8.4          magrittr_1.5       
 [82] R6_2.4.0            gplots_3.0.1.1      generics_0.0.2     
 [85] pillar_1.3.1        withr_2.1.2         xts_0.11-2         
 [88] survival_2.43-3     nnet_7.3-12         janeaustenr_0.1.5  
 [91] crayon_1.3.4        KernSmooth_2.23-15  grid_3.6.0         
 [94] data.table_1.12.0   callr_3.2.0         ModelMetrics_1.2.2 
 [97] threejs_0.3.1       digest_0.6.18       xtable_1.8-3       
[100] httpuv_1.4.5.1      stats4_3.6.0        munsell_0.5.0      
[103] shinyjs_1.0        
> 
> if (!interactive())
+   q("no")
> proc.time()
    user   system  elapsed 
 541.839   28.835 4186.127 
